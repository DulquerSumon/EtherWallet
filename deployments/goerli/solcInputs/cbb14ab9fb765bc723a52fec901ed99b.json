{
  "language": "Solidity",
  "sources": {
    "contracts/EtherWallet.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.8;\n\ncontract EtherWallet {\n    address payable public owner;\n\n    constructor() {\n        owner = payable(msg.sender);\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Sender is not owner\");\n        _;\n    }\n\n    function deposit() public payable {}\n\n    function send(address payable to, uint256 amount) public onlyOwner {\n        to.transfer(amount);\n    }\n\n    function balanceOfContract() public view returns (uint256) {\n        return address(this).balance;\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}